"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2197],{28384:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=t(74848),s=t(28453);const o={},a="location4j \ud83c\udf0e4\ufe0f\u20e3\u2668\ufe0f",c={id:"location4j",title:"location4j \ud83c\udf0e4\ufe0f\u20e3\u2668\ufe0f",description:"GitHub branch check runs",source:"@site/google/location4j.md",sourceDirName:".",slug:"/location4j",permalink:"/google/location4j",draft:!1,unlisted:!1,editUrl:"https://github.com/hyaliyun/Country/edit/main/website/google/location4j.md",tags:[],version:"current",frontMatter:{},sidebar:"devDocsSidebar",previous:{title:"countrycitystatejson",permalink:"/google/countrycitystatejson"},next:{title:"parse-address-string",permalink:"/google/parse-address-string"}},r={},d=[{value:"Setup \ud83d\ude80",id:"setup-",level:2},{value:"Quick Example \ud83c\udfd7",id:"quick-example-",level:2},{value:"Features \ud83d\udd2c",id:"features-",level:2},{value:"More Examples \ud83e\uddea",id:"more-examples-",level:2},{value:"Motivation \ud83c\udf31",id:"motivation-",level:2},{value:"Credits \ud83d\ude4f",id:"credits-",level:2},{value:"License \ud83d\udcdc",id:"license-",level:2}];function l(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"location4j-4\ufe0f\u20e3\ufe0f",children:"location4j \ud83c\udf0e4\ufe0f\u20e3\u2668\ufe0f"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.img,{src:"https://img.shields.io/github/check-runs/tomaytotomato/location4j/master",alt:"GitHub branch check runs"}),"\n",(0,i.jsx)(e.a,{href:"https://sonarcloud.io/summary/new_code?id=tomaytotomato_location4j",children:(0,i.jsx)(e.img,{src:"https://sonarcloud.io/api/project_badges/measure?project=tomaytotomato_location4j&metric=bugs",alt:"Bugs"})}),"\n",(0,i.jsx)(e.a,{href:"https://sonarcloud.io/summary/new_code?id=tomaytotomato_location4j",children:(0,i.jsx)(e.img,{src:"https://sonarcloud.io/api/project_badges/measure?project=tomaytotomato_location4j&metric=alert_status",alt:"Quality Gate Status"})}),"\n",(0,i.jsx)(e.a,{href:"https://javadoc.io/doc/com.tomaytotomato/location4j/1.0.3",children:(0,i.jsx)(e.img,{src:"https://javadoc.io/badge2/com.tomaytotomato/location4j/1.0.3/javadoc.svg",alt:"javadoc"})}),"\n",(0,i.jsx)(e.img,{src:"https://img.shields.io/github/commit-activity/m/tomaytotomato/location4j",alt:"GitHub commit activity"}),"\n",(0,i.jsx)(e.img,{src:"https://img.shields.io/github/license/tomaytotomato/location4j",alt:"GitHub License"})]}),"\n",(0,i.jsx)(e.p,{children:"location4j is a simple Java library designed for efficient and accurate geographical data lookups\nfor countries, states, and cities. \ud83d\uddfa\ufe0f"}),"\n",(0,i.jsx)(e.p,{children:"Unlike other libraries, it operates without relying on third-party APIs, making it both\ncost-effective and fast. \ud83c\udfce\ufe0f"}),"\n",(0,i.jsx)(e.p,{children:"Its built-in dataset provides quick lookups and no need for external HTTP calls. \ud83d\udcc0"}),"\n",(0,i.jsx)(e.h2,{id:"setup-",children:"Setup \ud83d\ude80"}),"\n",(0,i.jsx)(e.p,{children:"Get the latest version of the location4j library by adding it to your Maven pom.xml"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-xml",children:"\n<dependency>\n    <groupId>com.tomaytotomato</groupId>\n    <artifactId>location4j</artifactId>\n    <version>1.0.5</version>\n</dependency>\n"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Gradle"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-gradle",children:"implementation group: 'com.tomaytotomato', name: 'location4j', version: '1.0.5'\n"})}),"\n",(0,i.jsx)(e.h2,{id:"quick-example-",children:"Quick Example \ud83c\udfd7"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'import com.tomaytotomato.SearchLocationService;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        SearchLocationService searchLocationService = SearchLocationService.builder().build();\n\n        // Find all locations named San Francisco\n        List<Location> results = searchLocationService.search("san francisco");\n        printResults(results);\n\n        // Narrow search to the US\n        results = searchLocationService.search("san francisco, us");\n        printResults(results);\n\n        // Narrow search further to California\n        results = searchLocationService.search("san francisco, us california");\n        printResults(results);\n    }\n\n    private static void printResults(List<Location> results) {\n        System.out.println("Locations found: " + results.size());\n        results.forEach(location -> {\n            System.out.println("Country: " + location.getCountryName());\n            System.out.println("State: " + location.getStateName());\n            System.out.println("City: " + location.getCityName());\n        });\n    }\n}\n\n'})}),"\n",(0,i.jsx)(e.h2,{id:"features-",children:"Features \ud83d\udd2c"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Feature"}),(0,i.jsx)(e.th,{children:"Supported"}),(0,i.jsx)(e.th,{children:"Object"}),(0,i.jsx)(e.th,{children:"Example"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Search (free text)"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"Location"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'search("kyiv")'})," -> ",(0,i.jsx)(e.code,{children:'"Kyiv, Ukraine, Europe, UA"'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find All Countries"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"Country"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"findAllCountries()"})," -> ",(0,i.jsx)(e.code,{children:'["Belgium", "Canada", ...]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find Country by Id"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"Country"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"findCountryById(1)"})," -> ",(0,i.jsx)(e.code,{children:'["Afghanistan"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find Country by ISO2 code"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"Country"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'findCountryByISO2Code("CA")'})," -> ",(0,i.jsx)(e.code,{children:'["Canada"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find Country by ISO3 code"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"Country"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'findCountryByISO3Code("CAN")'})," -> ",(0,i.jsx)(e.code,{children:'["Canada"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find Country by Name"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"Country"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'findCountryByName("Canada")'})," -> ",(0,i.jsx)(e.code,{children:'["Canada"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find Country by Localised name"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"Country"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'findCountryByLocalisedName("Belgique")'})," -> ",(0,i.jsx)(e.code,{children:'["Belgium"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find Countries by State name"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"Country"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'findAllCountriesByStateName("Texas")'})," -> ",(0,i.jsx)(e.code,{children:'["USA"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find States by State name"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"State"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'findAllStatesByStateName("Texas")'})," -> ",(0,i.jsx)(e.code,{children:'["Texas", "USA"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find State by State Id"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"State"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"findStateById(5)"})," -> ",(0,i.jsx)(e.code,{children:'["California", "USA"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find States by State code"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"State"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'findAllStatesByStateCode("CA")'})," -> ",(0,i.jsx)(e.code,{children:'["California", "USA"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find City by City Id"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"City"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"findCityById(10)"})," -> ",(0,i.jsx)(e.code,{children:'["Los Angeles", "California"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find City by latitude/longitude"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"City"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"findClosestCityByLatLong(30.438, -84.280)"})," -> ",(0,i.jsx)(e.code,{children:'["Tallahassee", "Florida"]'})]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Find Cities by City name"}),(0,i.jsx)(e.td,{children:"\u2705"}),(0,i.jsx)(e.td,{children:"City"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:'findAllCitiesByCityName("San Francisco")'})," -> ",(0,i.jsx)(e.code,{children:'["San Francisco", "California"]'})]})]})]})]}),"\n",(0,i.jsx)(e.p,{children:"\ud83d\udfe2 location4j can parse free text strings with or without punctuation or capitalisation e.g."}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:"San Francisco, CA, USA"}),"\n",(0,i.jsx)(e.p,{children:"ca united states san francisco"}),"\n",(0,i.jsx)(e.p,{children:"US, San Francisco, california"}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["\ud83d\udfe2 Latitude/Longitude searches can use ",(0,i.jsx)(e.code,{children:"double"}),", ",(0,i.jsx)(e.code,{children:"BigDecimal"}),", or ",(0,i.jsx)(e.code,{children:"String"})," inputs for both values;\nthe types must match (\nyou can't mix a ",(0,i.jsx)(e.code,{children:"String"})," latitude with a ",(0,i.jsx)(e.code,{children:"BigDecimal"})," or ",(0,i.jsx)(e.code,{children:"double"})," longitude) but the API will accept\nany of the three\ntypes."]}),"\n",(0,i.jsx)(e.p,{children:"\ud83d\udd34 location4j cannot find a location based on a small town, street, or\nzipcode/postcode."}),"\n",(0,i.jsx)(e.h2,{id:"more-examples-",children:"More Examples \ud83e\uddea"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Lookup countries"})}),"\n",(0,i.jsxs)(e.p,{children:["For simple lookups the ",(0,i.jsx)(e.code,{children:"LocationService"})," can act like a repository, allow the retrieval of\ncountries, states and city information."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'\nimport com.tomaytotomato.LocationService;\n\npublic class LocationServiceExample {\n\n    public static void main(String[] args) {\n        LocationService locationService = LocationService.builder().build();\n\n        // Get all countries\n        List<Country> countries = locationService.findAllCountries();\n\n        // Filter European countries\n        List<Country> europeanCountries = countries.stream()\n                .filter(country -> "Europe".equals(country.getRegion()))\n                .toList();\n\n        // Find Afghanistan by ID\n        Country afghanistan = locationService.findCountryById(1);\n\n        // Find all cities named San Francisco\n        List<City> cities = locationService.findAllCities("San Francisco");\n\n    }\n}\n\n'})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Search locations"})}),"\n",(0,i.jsxs)(e.p,{children:["Search any text for a location, the ",(0,i.jsx)(e.code,{children:"SearchLocationService"})," can handle formatted or unformatted\ntext. It will try and find matches against a variety of keywords it has in its dataset."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'\nimport com.tomaytotomato.SearchLocationService;\n\npublic class SearchLocationServiceExample {\n\n    public static void main(String[] args) {\n        SearchLocationService searchLocationService = SearchLocationService.builder()\n            .withTextNormaliser(new DefaultTextNormaliser())\n            .build();\n\n        // Search for Santa Clara\n        List<Location> results = searchLocationService.search("Santa Clara");\n\n        // Search for Santa Clara in the USA\n        List<Location> resultsUnitedStates = searchLocationService.search("Santa Clara USA");\n\n        // Search for Santa Clara in California (it works with ISO2 or ISO3) codes\n        List<Location> resultsCalifornia = searchLocationService.search("Santa Clara US CA");\n    }\n}\n\n'})}),"\n",(0,i.jsx)(e.h2,{id:"motivation-",children:"Motivation \ud83c\udf31"}),"\n",(0,i.jsx)(e.p,{children:"Parsing location data efficiently is crucial for many applications, yet it can be complex and\ntime-consuming."}),"\n",(0,i.jsx)(e.p,{children:"Third-party services like Google Location API can be costly, and using large language models can\nintroduce significant latency."}),"\n",(0,i.jsx)(e.p,{children:"location4j offers a practical solution with its own dataset, enabling fast and cost-effective\ngeographical lookups to a city/town level (which is sufficient in most cases)."}),"\n",(0,i.jsx)(e.p,{children:"This allows applications to be built without another external dependency and the overheads that come\nwith it."}),"\n",(0,i.jsx)(e.p,{children:"I may add other functionality in the future if needed e.g. geolocation to nearest place, geofencing\netc."}),"\n",(0,i.jsx)(e.h2,{id:"credits-",children:"Credits \ud83d\ude4f"}),"\n",(0,i.jsxs)(e.p,{children:["Country data sourced\nfrom ",(0,i.jsx)(e.a,{href:"https://github.com/dr5hn/countries-states-cities-database",children:"dr5shn/countries-states-cities-database"})," ",(0,i.jsx)(e.a,{href:"https://opendatacommons.org/licenses/odbl/",children:(0,i.jsx)(e.img,{src:"https://img.shields.io/badge/License-ODbL-brightgreen.svg",alt:"License: ODbL"})})]}),"\n",(0,i.jsx)(e.h2,{id:"license-",children:"License \ud83d\udcdc"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://choosealicense.com/licenses/mit/",children:"MIT License"})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>c});var i=t(96540);const s={},o=i.createContext(s);function a(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);