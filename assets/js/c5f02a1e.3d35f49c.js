"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[56],{65907:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var l=i(74848),s=i(28453);const r={},a="Laravel World Database",o={id:"Laravel World Database",title:"Laravel World Database",description:"This package focused on World Countries, Regions, and Cities database with locale support for Laravel.",source:"@site/google/Laravel World Database.md",sourceDirName:".",slug:"/Laravel World Database",permalink:"/google/Laravel World Database",draft:!1,unlisted:!1,editUrl:"https://github.com/hyaliyun/Country/edit/main/website/google/Laravel World Database.md",tags:[],version:"current",frontMatter:{},sidebar:"devDocsSidebar",previous:{title:"Laravel Country",permalink:"/google/Laravel Country"},next:{title:"Laravel World",permalink:"/google/Laravel World"}},c={},d=[{value:"Conceptions",id:"conceptions",level:2},{value:"Attributes",id:"attributes",level:3},{value:"Localization",id:"localization",level:3},{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"Contributions",id:"contributions",level:2},{value:"TODO",id:"todo",level:2},{value:"Data Sources",id:"data-sources",level:2},{value:"Thanks",id:"thanks",level:2},{value:"About",id:"about",level:2}];function t(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"laravel-world-database",children:"Laravel World Database"})}),"\n",(0,l.jsx)(n.p,{children:"This package focused on World Countries, Regions, and Cities database with locale support for Laravel."}),"\n",(0,l.jsx)(n.h2,{id:"conceptions",children:"Conceptions"}),"\n",(0,l.jsx)(n.p,{children:"There are 5 main objects in this package."}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"World: the earth world."}),"\n",(0,l.jsx)(n.li,{children:"Continent: 7 continent"}),"\n",(0,l.jsx)(n.li,{children:"Country: 248 countries"}),"\n",(0,l.jsx)(n.li,{children:"Division: Divisions such as state/province."}),"\n",(0,l.jsx)(n.li,{children:"City: the last level of region, some cities up to Country, some up to Division."}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"attributes",children:"Attributes"}),"\n",(0,l.jsx)(n.p,{children:"Common attributes:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"name"}),": Common name of region(english)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"full_name"}),": Full name or official name(english)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"code"}),": ISO-3166-1-alpha2/ISO-3166-2 code"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"local_name"}),": translation of Common name"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"local_full_name"}),": translation of full name"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"local_alias"}),": alias in different language"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"local_abbr"}),": Abbreviation"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Country spec attributes:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"emoji"}),": Emoji flag of country"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"capital"}),": Captial of this country"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"code_alpha3"}),": Code of ISO-3166-1-alpha3"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"currency_code"}),": ISO-4177 Currency Code, e.g. USD, CNY"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"currency_name"}),": ISO-4177 Currency Name,"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"local_currency_name"}),": ISO-4177 Currency name in locale"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"use Khsing\\World\\World;\n$china = World::getByCode('cn');\n$china->setLocale('zh-cn');\n$china->name; // China\n$china->local_name; // \u4e2d\u56fd\n$china->full_name; // People's Republic of China\n$china->local_full_name; // \u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\n$china->emoji; // \ud83c\udde8\ud83c\uddf3\n$china->callingcode; // 86\n$china->code; // CN\n$china->code_alpha3; // CHN\n$china->has_division; // true\n$china->currency_code; // CNY\n$china->currency_name; // Yuan Renminbi\n$china->local_currency_name; // \u4eba\u6c11\u5e01\n"})}),"\n",(0,l.jsx)(n.h3,{id:"localization",children:"Localization"}),"\n",(0,l.jsxs)(n.p,{children:["Right now, only English(default and fallback) and Chinese-Simp ",(0,l.jsx)(n.code,{children:"zh-cn"})," are supported. Locale settings is following Laravel project settings in ",(0,l.jsx)(n.code,{children:"config/app.php"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"composer require"})}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"composer require khsing/world\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Add Service Provider into ",(0,l.jsx)(n.code,{children:"config/app.php"}),", (Only required before Laravel 5.5)"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"'providers' => [\n    // ...\n    Khsing\\World\\WorldServiceProvider::class,\n]\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Publish and init"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'php artisan vendor:publish --force --provider="Khsing\\World\\WorldServiceProvider"\ncomposer dump-autoload\nphp artisan world:init\n'})}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get all Continent"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"use Khsing\\World\\World;\n\nWorld::Continents()\n\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get all Countries"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"use Khsing\\World\\World;\n\nWorld::Countries()\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get country/city/division by code"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"use Khsing\\World\\World;\n\nWorld::getByCode('cn'); // iso-3166 alpha 2 code\nWorld::getByCode('chn'); // iso-3166 alpha 3 code\nWorld::getByCode('cn-11'); // Beijing\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get countries belong to a continent"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"use Khsing\\World\\Models\\Continent;\n\n$asia = Continent::getByCode('AS');\n$countries = $asia->countries()->get();\n// or use children method\n$countries = $asia->children();\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get continent or parent"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"$china = Country::getByCode('cn');\n$asia = $china->parent();\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get division/state/province via Conutry"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"$china = Country::getByCode('cn');\n$provinces = $china->divisions()->get()\n// or use children method\n$provinces = $china->children();\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"get cities via Country or Division."}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"$china = Country::getByCode('cn');\n// check has_division to determine next level is division or city.\n$china->has_division; // true, otherwise is false\n$regsions = $china->children();\n"})}),"\n",(0,l.jsx)(n.h2,{id:"contributions",children:"Contributions"}),"\n",(0,l.jsx)(n.p,{children:"If you want contribute to this library, issue and pr are welcome. please following those steps."}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"start a new laravel project and install this library."}),"\n",(0,l.jsxs)(n.li,{children:["install ",(0,l.jsx)(n.a,{href:"https://github.com/orangehill/iseed",children:"orangehill/iseed"}),"."]}),"\n",(0,l.jsx)(n.li,{children:"modify datas via sql."}),"\n",(0,l.jsxs)(n.li,{children:["generate seeds via ",(0,l.jsx)(n.code,{children:"artisan iseed world_cities,world_cities_locale,world_continents,world_continents_locale,world_countries,world_countries_locale,world_divisions,world_divisions_locale"})]}),"\n",(0,l.jsxs)(n.li,{children:["replace ",(0,l.jsx)(n.code,{children:"delete()"})," with ",(0,l.jsx)(n.code,{children:"truncate()"}),", ",(0,l.jsx)(n.code,{children:"cd database/seeders/ && sed -i 's/->delete()/->truncate()/g' World*.php"})]}),"\n",(0,l.jsx)(n.li,{children:"copy seeds files into library."}),"\n",(0,l.jsx)(n.li,{children:"commit your work. ;)"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"todo",children:"TODO"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"change the way to seed data, eg. loading data from json?"}),"\n",(0,l.jsx)(n.li,{children:"add front-end support"}),"\n",(0,l.jsx)(n.li,{children:"find a way to update dataset"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"data-sources",children:"Data Sources"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://www.knowledgebase-script.com/kb/article/iso-639-1-standard-language-codes-255.html",children:"ISO 639-1 Standard Language Codes"}),": language codes"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://www.andiamo.co.uk/resources/iso-language-codes/",children:"ISO 639-1 standard language codes"}),": language codes"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://unstats.un.org/unsd/methodology/m49/overview/",children:"United Nations Statistics Division: Standard country or area codes for statistical use (M49)"}),": ISO-3166-alpha3 code and country list."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/ISO_3166-2",children:"ISO 3166-2"}),": main data source"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"thanks",children:"Thanks"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/moolighty/geo",children:"moolighty/geo"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/mledoze/countries",children:"mledoze/countries"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/cn/GB2260",children:"cn/GB2260"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"about",children:"About"}),"\n",(0,l.jsx)(n.p,{children:"This package published under MIT license. If you have any question or suggestion, please feel free to submit a issue, or email me Guixing<khsing.cn(AT)gmail.com>."}),"\n",(0,l.jsx)(n.p,{children:"Have a nice day."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var l=i(96540);const s={},r=l.createContext(s);function a(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);